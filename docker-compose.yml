services:
    proxy-nginx-proxy:
        container_name: proxy-nginx-proxy
        image: nginxproxy/nginx-proxy:${NGINX_PROXY_VERSION}
        restart: unless-stopped
        environment:
            ENABLE_IPV6: 'true'
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./conf:/etc/nginx/conf.d
            - ./vhost:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html
            - ./dhparam:/etc/nginx/dhparam
            - ./certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro

    proxy-acme-companion:
        container_name: proxy-acme-companion
        image: nginxproxy/acme-companion:${ACME_COMPANION_VERSION}
        restart: unless-stopped
        depends_on:
            - proxy-nginx-proxy
        volumes:
            - ./vhost:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html
            - ./dhparam:/etc/nginx/dhparam
            - ./certs:/etc/nginx/certs:rw
            - /var/run/docker.sock:/var/run/docker.sock:ro
        environment:
            NGINX_PROXY_CONTAINER: proxy-nginx-proxy
            FILES_UID: ${USER_ID}
            FILES_GID: ${GROUP_ID}
            FILES_PERMS: 644
        profiles:
            - acme

    proxy-self-signed-companion:
        container_name: proxy-self-signed-companion
        image: sebastienheyd/self-signed-proxy-companion:${SELF_SIGNED_VERSION}
        restart: unless-stopped
        depends_on:
            - proxy-nginx-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./certs:/etc/nginx/certs:rw
        environment:
            NGINX_PROXY_CONTAINER: proxy-nginx-proxy
        profiles:
            - self-signed

    mailcatcher:
        container_name: mailcatcher
        image: sj26/mailcatcher
        restart: unless-stopped
        ports:
            - "1080:1080"
        networks:
            - mail-catcher-network

    opensearch:
        container_name: opensearch
        build:
            dockerfile: Dockerfile
            context: images/opensearch
        restart: unless-stopped
        #ports:
        #  - "9200"
        #  - "9300"
        env_file: env/opensearch.env
        environment:
            - "discovery.type=single-node"
            - "cluster.routing.allocation.disk.threshold_enabled=false"
            - "index.blocks.read_only_allow_delete"
            - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
            #- "max_map_count=262144"
        networks:
            - open-search-network

    elasticsearch:
        container_name: elasticsearch
        build:
            dockerfile: Dockerfile
            context: images/elasticsearch
        #ports:
        #    - "9200:9200"
        #    - "9300:9300"
        env_file: env/elasticsearch.env
        environment:
            - "discovery.type=single-node"
            ## Set custom heap size to avoid memory errors
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
            ## Avoid test failures due to small disks
            ## More info at https://github.com/markshust/docker-magento/issues/488
            - "cluster.routing.allocation.disk.threshold_enabled=false"
            - "index.blocks.read_only_allow_delete"
        networks:
            - elastic-search-network

    phpmyadmin:
        container_name: phpmyadmin
        image: linuxserver/phpmyadmin
        restart: unless-stopped
        env_file: env/phpmyadmin.env
        ports:
            - "8080:80"
        networks:
            - shared-db-network

    portainer:
        container_name: portainer
        image: portainer/portainer-ce:2.21.5
        command: -H unix:///var/run/docker.sock
        restart: always
        environment:
            - VIRTUAL_HOST=localhost
            - VIRTUAL_PORT=9000
        #ports:
        #    - 8000:8000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data

volumes:
    portainer_data:

networks:
    default:
        external: true
        name: nginx-proxy
    shared-db-network:
        external: true
    mail-catcher-network:
        external: true
    open-search-network:
        external: true
    elastic-search-network:
        external: true
