services:
    proxy-nginx-proxy:
        container_name: proxy-nginx-proxy
        image: nginxproxy/nginx-proxy:${NGINX_PROXY_VERSION}
        restart: unless-stopped
        environment:
            ENABLE_IPV6: 'true'
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./conf:/etc/nginx/conf.d
            - ./vhost:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html
            - ./dhparam:/etc/nginx/dhparam
            - ./certs:/etc/nginx/certs:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./htpasswd:/etc/nginx/htpasswd:ro  #Remove for local env

    proxy-acme-companion:
        container_name: proxy-acme-companion
        image: nginxproxy/acme-companion:${ACME_COMPANION_VERSION}
        restart: unless-stopped
        depends_on:
            - proxy-nginx-proxy
        volumes:
            - ./vhost:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html
            - ./dhparam:/etc/nginx/dhparam
            - ./certs:/etc/nginx/certs:rw
            - /var/run/docker.sock:/var/run/docker.sock:ro
        environment:
            NGINX_PROXY_CONTAINER: proxy-nginx-proxy
            FILES_UID: ${USER_ID}
            FILES_GID: ${GROUP_ID}
            FILES_PERMS: 644
        profiles:
            - acme

    proxy-self-signed-companion:
        container_name: proxy-self-signed-companion
        image: sebastienheyd/self-signed-proxy-companion:${SELF_SIGNED_VERSION}
        restart: unless-stopped
        depends_on:
            - proxy-nginx-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./certs:/etc/nginx/certs:rw
        environment:
            NGINX_PROXY_CONTAINER: proxy-nginx-proxy
        profiles:
            - self-signed

    mailcatcher:
        container_name: mailcatcher
        image: sj26/mailcatcher
        restart: unless-stopped
        environment:
            VIRTUAL_HOST: "mail.test"
            VIRTUAL_PORT: "1080"
            SELF_SIGNED_HOST: "mail.test"
            LETSENCRYPT_HOST: "mail.test"
            LETSENCRYPT_EMAIL: "admin@mail.test"
        networks:
            - default
            - mail-catcher-network
        depends_on:
            - proxy-nginx-proxy

    opensearch:
        container_name: opensearch
        build:
            dockerfile: Dockerfile
            context: images/opensearch
        restart: unless-stopped
        env_file: env/opensearch.env
        environment:
            - "discovery.type=single-node"
            - "cluster.routing.allocation.disk.threshold_enabled=false"
            - "index.blocks.read_only_allow_delete"
            - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
            - "OPENSEARCH_INITIAL_ADMIN_PASSWORD=magento"
        networks:
            - open-search-network
            
    opensearch-dashboards:
        image: opensearchproject/opensearch-dashboards:2.5.0
        container_name: opensearch-dashboards
        restart: unless-stopped
        environment:
            OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
            DISABLE_SECURITY_DASHBOARDS_PLUGIN: 'true'
            VIRTUAL_HOST: "search.test"
            VIRTUAL_PORT: "5601"
            SELF_SIGNED_HOST: "search.test"
            LETSENCRYPT_HOST: "search.test"
            LETSENCRYPT_EMAIL: "admin@.test"
        networks:
            - default
            - open-search-network
        depends_on:
            - proxy-nginx-proxy
            - opensearch

    phpmyadmin:
        container_name: phpmyadmin
        image: linuxserver/phpmyadmin
        restart: unless-stopped
        env_file: env/phpmyadmin.env
        environment:
            VIRTUAL_HOST: "db.test"
            VIRTUAL_PORT: "80"
            SELF_SIGNED_HOST: "db.test"
            LETSENCRYPT_HOST: "db.test"
            LETSENCRYPT_EMAIL: "admin@db.test"
        depends_on:
            - proxy-nginx-proxy
        networks:
            - default
            - shared-db-network

    portainer:
        container_name: portainer
        image: portainer/portainer-ce:2.21.5
        command: -H unix:///var/run/docker.sock
        restart: always
        environment:
            VIRTUAL_HOST: "portainer.test"
            VIRTUAL_PORT: "9000"
            SELF_SIGNED_HOST: "portainer.test"
            LETSENCRYPT_HOST: "portainer.test"
            LETSENCRYPT_EMAIL: "admin@portainer.test"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:4.1-management-alpine
        restart: unless-stopped
        environment:
            RABBITMQ_DEFAULT_USER: "admin"
            RABBITMQ_DEFAULT_PASS: "rabbitmq"
            RABBITMQ_DEFAULT_VHOST: "/"
            VIRTUAL_HOST: "rabbitmq.test"
            VIRTUAL_PORT: "15672"
            VIRTUAL_PROTO: "http"
            RABBITMQ_MANAGEMENT_PORT: "15672"
            SELF_SIGNED_HOST: "rabbitmq.test"
            LETSENCRYPT_HOST: "rabbitmq.test"
            LETSENCRYPT_EMAIL: "admin@rabbitmq.test"
        ports:
            - "5672"
        volumes:
            - rabbitmqdata:/var/lib/rabbitmq
        depends_on:
            - proxy-nginx-proxy
        networks:
            - default
            - rabbitmq-network

volumes:
    portainer_data:
    rabbitmqdata:

networks:
    default:
        external: true
        name: nginx-proxy
    shared-db-network:
        external: true
    mail-catcher-network:
        external: true
    open-search-network:
        driver: bridge
    rabbitmq-network:
        external: true
